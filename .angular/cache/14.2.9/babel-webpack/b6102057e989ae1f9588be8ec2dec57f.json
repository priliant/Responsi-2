{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova, checkAvailability, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\nimport { Observable, merge } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nexport var Connection;\n\n(function (Connection) {\n  Connection[\"UNKNOWN\"] = \"unknown\";\n  Connection[\"ETHERNET\"] = \"ethernet\";\n  Connection[\"WIFI\"] = \"wifi\";\n  Connection[\"CELL_2G\"] = \"2g\";\n  Connection[\"CELL_3G\"] = \"3g\";\n  Connection[\"CELL_4G\"] = \"4g\";\n  Connection[\"CELL\"] = \"cellular\";\n  Connection[\"NONE\"] = \"none\";\n})(Connection || (Connection = {}));\n\nvar Network =\n/** @class */\nfunction (_super) {\n  __extends(Network, _super);\n\n  function Network() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Constants for possible connection types\n     */\n\n\n    _this.Connection = {\n      UNKNOWN: 'unknown',\n      ETHERNET: 'ethernet',\n      WIFI: 'wifi',\n      CELL_2G: '2g',\n      CELL_3G: '3g',\n      CELL_4G: '4g',\n      CELL: 'cellular',\n      NONE: 'none'\n    };\n    return _this;\n  }\n\n  Network.prototype.onChange = function () {\n    var _this = this;\n\n    return function () {\n      if (checkAvailability(_this) === true) {\n        return merge(_this.onConnect().pipe(mapTo('connected')), _this.onDisconnect().pipe(mapTo('disconnected')));\n      }\n    }();\n  };\n\n  Network.prototype.onDisconnect = function () {\n    return cordova(this, \"onDisconnect\", {\n      \"eventObservable\": true,\n      \"event\": \"offline\",\n      \"element\": \"document\"\n    }, arguments);\n  };\n\n  Network.prototype.onConnect = function () {\n    return cordova(this, \"onConnect\", {\n      \"eventObservable\": true,\n      \"event\": \"online\",\n      \"element\": \"document\"\n    }, arguments);\n  };\n\n  Object.defineProperty(Network.prototype, \"type\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"type\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"type\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Network.prototype, \"downlinkMax\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"downlinkMax\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"downlinkMax\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Network.pluginName = \"Network\";\n  Network.plugin = \"cordova-plugin-network-information\";\n  Network.pluginRef = \"navigator.connection\";\n  Network.repo = \"https://github.com/apache/cordova-plugin-network-information\";\n  Network.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Windows\"];\n\n  Network.ɵfac = /*@__PURE__*/function () {\n    var ɵNetwork_BaseFactory;\n    return function Network_Factory(t) {\n      return (ɵNetwork_BaseFactory || (ɵNetwork_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Network)))(t || Network);\n    };\n  }();\n\n  Network.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: Network,\n    factory: function (t) {\n      return Network.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Network, [{\n      type: Injectable\n    }], null, null);\n  })();\n\n  return Network;\n}(IonicNativePlugin);\n\nexport { Network };","map":{"version":3,"names":["__extends","Injectable","IonicNativePlugin","cordova","checkAvailability","cordovaPropertyGet","cordovaPropertySet","Observable","merge","mapTo","ɵngcc0","Connection","Network","_super","_this","apply","arguments","UNKNOWN","ETHERNET","WIFI","CELL_2G","CELL_3G","CELL_4G","CELL","NONE","prototype","onChange","onConnect","pipe","onDisconnect","Object","defineProperty","get","set","value","enumerable","configurable","pluginName","plugin","pluginRef","repo","platforms","ɵfac","ɵNetwork_BaseFactory","Network_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type"],"sources":["D:/Kuliah/Semester 5/Praktikum Pemrograman Mobile/ionic_peminjaman/node_modules/@ionic-native/network/__ivy_ngcc__/ngx/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova, checkAvailability, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\nimport { Observable, merge } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nexport var Connection;\n(function (Connection) {\n    Connection[\"UNKNOWN\"] = \"unknown\";\n    Connection[\"ETHERNET\"] = \"ethernet\";\n    Connection[\"WIFI\"] = \"wifi\";\n    Connection[\"CELL_2G\"] = \"2g\";\n    Connection[\"CELL_3G\"] = \"3g\";\n    Connection[\"CELL_4G\"] = \"4g\";\n    Connection[\"CELL\"] = \"cellular\";\n    Connection[\"NONE\"] = \"none\";\n})(Connection || (Connection = {}));\nvar Network = /** @class */ (function (_super) {\n    __extends(Network, _super);\n    function Network() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Constants for possible connection types\n         */\n        _this.Connection = {\n            UNKNOWN: 'unknown',\n            ETHERNET: 'ethernet',\n            WIFI: 'wifi',\n            CELL_2G: '2g',\n            CELL_3G: '3g',\n            CELL_4G: '4g',\n            CELL: 'cellular',\n            NONE: 'none',\n        };\n        return _this;\n    }\n    Network.prototype.onChange = function () {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return merge(_this.onConnect().pipe(mapTo('connected')), _this.onDisconnect().pipe(mapTo('disconnected')));\n            }\n        })();\n    };\n    Network.prototype.onDisconnect = function () { return cordova(this, \"onDisconnect\", { \"eventObservable\": true, \"event\": \"offline\", \"element\": \"document\" }, arguments); };\n    Network.prototype.onConnect = function () { return cordova(this, \"onConnect\", { \"eventObservable\": true, \"event\": \"online\", \"element\": \"document\" }, arguments); };\n    Object.defineProperty(Network.prototype, \"type\", {\n        get: function () { return cordovaPropertyGet(this, \"type\"); },\n        set: function (value) { cordovaPropertySet(this, \"type\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Network.prototype, \"downlinkMax\", {\n        get: function () { return cordovaPropertyGet(this, \"downlinkMax\"); },\n        set: function (value) { cordovaPropertySet(this, \"downlinkMax\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Network.pluginName = \"Network\";\n    Network.plugin = \"cordova-plugin-network-information\";\n    Network.pluginRef = \"navigator.connection\";\n    Network.repo = \"https://github.com/apache/cordova-plugin-network-information\";\n    Network.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Windows\"];\nNetwork.ɵfac = /*@__PURE__*/ function () { var ɵNetwork_BaseFactory; return function Network_Factory(t) { return (ɵNetwork_BaseFactory || (ɵNetwork_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Network)))(t || Network); }; }();\nNetwork.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Network, factory: function (t) { return Network.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Network, [{\n        type: Injectable\n    }], null, null); })();\n    return Network;\n}(IonicNativePlugin));\nexport { Network };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}