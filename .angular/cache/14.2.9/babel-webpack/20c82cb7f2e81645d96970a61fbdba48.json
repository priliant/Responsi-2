{"ast":null,"code":"import { encode, decode } from './utils';\n/**\n * Set a cookie\n * @param key The key to set\n * @param value The value to set\n * @param options Optional additional parameters\n */\n\nexport const setCookie = (key, value, options = {}) => {\n  // Safely Encoded Key/Value\n  const encodedKey = encode(key);\n  const encodedValue = encode(value); // Clean & sanitize options\n\n  const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n\n  const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n\n  document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}`;\n};\n/**\n * Gets all HttpCookies\n */\n\nexport const getCookies = () => {\n  const output = [];\n  const map = {};\n\n  if (!document.cookie) {\n    return output;\n  }\n\n  const cookies = document.cookie.split(';') || [];\n\n  for (const cookie of cookies) {\n    // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n    let [k, v] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n    k = decode(k).trim();\n    v = decode(v).trim();\n    map[k] = v;\n  }\n\n  const entries = Object.entries(map);\n\n  for (const [key, value] of entries) {\n    output.push({\n      key,\n      value\n    });\n  }\n\n  return output;\n};\n/**\n * Gets a single HttpCookie given a key\n */\n\nexport const getCookie = key => {\n  const cookies = getCookies();\n\n  for (const cookie of cookies) {\n    if (cookie.key === key) {\n      return cookie;\n    }\n  }\n\n  return {\n    key,\n    value: ''\n  };\n};\n/**\n * Deletes a cookie given a key\n * @param key The key of the cookie to delete\n */\n\nexport const deleteCookie = key => {\n  document.cookie = `${key}=; Max-Age=0`;\n};\n/**\n * Clears out cookies by setting them to expire immediately\n */\n\nexport const clearCookies = () => {\n  const cookies = document.cookie.split(';') || [];\n\n  for (const cookie of cookies) {\n    document.cookie = cookie.replace(/^ +/, '').replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n  }\n};","map":{"version":3,"names":["encode","decode","setCookie","key","value","options","encodedKey","encodedValue","expires","replace","path","document","cookie","getCookies","output","map","cookies","split","k","v","trim","entries","Object","push","getCookie","deleteCookie","clearCookies","Date","toUTCString"],"sources":["D:/Kuliah/Semester 5/Praktikum Pemrograman Mobile/ionic_peminjaman/node_modules/@capacitor-community/http/dist/esm/cookie.js"],"sourcesContent":["import { encode, decode } from './utils';\n/**\n * Set a cookie\n * @param key The key to set\n * @param value The value to set\n * @param options Optional additional parameters\n */\nexport const setCookie = (key, value, options = {}) => {\n    // Safely Encoded Key/Value\n    const encodedKey = encode(key);\n    const encodedValue = encode(value);\n    // Clean & sanitize options\n    const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n    const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n    document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}`;\n};\n/**\n * Gets all HttpCookies\n */\nexport const getCookies = () => {\n    const output = [];\n    const map = {};\n    if (!document.cookie) {\n        return output;\n    }\n    const cookies = document.cookie.split(';') || [];\n    for (const cookie of cookies) {\n        // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n        let [k, v] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n        k = decode(k).trim();\n        v = decode(v).trim();\n        map[k] = v;\n    }\n    const entries = Object.entries(map);\n    for (const [key, value] of entries) {\n        output.push({\n            key,\n            value,\n        });\n    }\n    return output;\n};\n/**\n * Gets a single HttpCookie given a key\n */\nexport const getCookie = (key) => {\n    const cookies = getCookies();\n    for (const cookie of cookies) {\n        if (cookie.key === key) {\n            return cookie;\n        }\n    }\n    return {\n        key,\n        value: '',\n    };\n};\n/**\n * Deletes a cookie given a key\n * @param key The key of the cookie to delete\n */\nexport const deleteCookie = (key) => {\n    document.cookie = `${key}=; Max-Age=0`;\n};\n/**\n * Clears out cookies by setting them to expire immediately\n */\nexport const clearCookies = () => {\n    const cookies = document.cookie.split(';') || [];\n    for (const cookie of cookies) {\n        document.cookie = cookie\n            .replace(/^ +/, '')\n            .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}